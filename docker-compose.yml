version: '3'
services:
  nginx:
    restart: always
    build: ./nginx
    volumes:
      - ./data:/var/www/data
      - ./frontend:/var/www/front
    ports:
      - "3333:80"
    depends_on:
      - backend
      - pgadmin

  backend:
    build: ./backend
    restart: always
    environment:
      PYTHONUNBUFFERED: "True"
      PYTHONDONTWRITEBYTECODE: "1"
      TZ: "${TZ}"
      SECRET: "${SECRET}"
      DB_HOST: "${DB_HOST}"
      DB_PORT: "${DB_PORT}"
      DB_USER: "${DB_USER}"
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_NAME: "${DB_NAME}"
    volumes:
      - ./backend/app:/app
      - ./backend/static:/static
      - ./data:/data
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"

  postgres:
    image: postgres:14-alpine3.16
    restart: always
    environment:
      TZ: "${TZ}"
      POSTGRES_DB: "${DB_NAME}"
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./database/scripts:/docker-entrypoint-initdb.d
      - ./database/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:6.13
    restart: always
    environment:
      TZ: "${TZ}"
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_DISABLE_POSTFIX: 1
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./database/pgadmin:/var/lib/pgadmin